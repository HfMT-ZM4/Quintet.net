<?xml version='1.0' encoding='UTF-8'?>

<?xml-stylesheet href="./_c74_tut.xsl" type="text/xsl"?>

<chapter name="Johann Niegl: Sirenen">


<previous name="05creatinganinstrument">Quintet.net: Manual</previous>
<!--<next name="NN">NN</next>
-->
<parent name="00index">Quintet.net: Table of Contents</parent>

<h1>Johann Niegl</h1>
<h2><b>Sirenen</b></h2>


<p>"Sirenen" is a piece composed by german composer Johann Niegl.</p>
<p><illustration><img src="images/sirenenScore.png"/></illustration></p>
<p>The settings are following:</p>

<ul>
    <li>5 Performers on stage (+ 5 small monitor speakers on stands placed behind performers.) – Large Semicircle</li>
    <li>5 small monitor speakers on stands placed behind performers (positioned in large semicircle)</li>

    
</ul>

<h2><b>Audio</b></h2>

<ul>
<li>5 Audio Channels</li>
<li>5 small monitor speakers on stands placed behind performers. (e.g. Genelec 8030A)</li>
</ul>

<h2><b>Concept:</b></h2>

<p>The piece Sirenen was developed in 2014 as part of a seminar for performative computer music of the master's program in multimedia composition at the HfMT Hamburg. The initial idea was to develop a virtual sound generation that delivers sound results that are as chaotic as possible and to organize and "steer" them into orderly paths with the help of sensors as input devices and a graphic score.</p>


<p>The score provides for 5 players, all controlling the same sound generation via sensors in the same way. During the course of a performance, the players are given playing instructions through a graphical score. These are abstract and leave room for the players' own interpretations of the score. At the same time, the score takes into account the peculiarities of sound production, e.g. when it prompts players to aim at the coordinates near a certain node. The most important influence of the score on the form is the specification of the sequence and duration of the players' actions. Thus, the overall sound impression is condensed or thinned out depending on how many players are performing actions and how many actions are performed consecutively in a given time.</p>

<h2><b>Input</b></h2>
<p>The sound generation was realized in Max, the underlying patch was developed in a "trial and error" process. The main principle of sound generation is feedback, i.e. the return of audio signals (often through a sound-modifying processing stage) to a previous point in the signal chain. Changeable parameters were inserted at several points in the patch to shape the sound result. Originally a Leapmotion controller served as an input device. Only 3 information signals were used as main input parameters: the position of the player's hand in terms of X, Y and Z coordinates. The Z-coordinate always controlled the loudness of the sound generation. The X and Y coordinates were mapped to all previously defined sound shaping parameters using a nodes object.</p>
<p><illustration><img src="images/input1.png"/></illustration></p>
<p> </p>
<p><illustration><img src="images/input2.png"/></illustration></p>

<h2><b>TouchOSC</b></h2>
<p>TouchOSC application is available on both iOS and Android. Download it from AppStore or Google Play Market.</p>

<h3><b>Settings:</b></h3> 
<p>In <i>“Connections”</i> set your local network IP address. OSC -> Host</p>
<p>Port (outgoing) needs to be set at 8000</p>
<p>Port (incoming) needs to be set at 9000</p>
<p><illustration><img src="images/TouchOSC1.png"/></illustration></p>
<p>In <i>“Layout”</i> select <i>“Simple”</i> view.</p>
<p><illustration><img src="images/TouchOSC2.png"/></illustration></p>
<p>Afterwards in <i>“Options”</i> activate <i>“Touch messages</i> (/z)”.</p>
<p><illustration><img src="images/TouchOSC3.png"/></illustration></p>

<p>You will be forwarded to UI subsequently.  </p>
<p><illustration><img src="images/TouchOSC4.png"/></illustration></p>
<p>Select third tool. You will be ending up with following view:</p>
<p><illustration><img src="images/TouchOSC5.png"/></illustration></p>


</chapter>
