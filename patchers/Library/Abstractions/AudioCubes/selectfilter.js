////////////////////////////////////////////////////////////////////// OUTLETS & INLETS////////////////////////////////////////////////////////////////////outlets = 4;const outletSelection = 0;const outletEnableDisplay = 1;const outletGetColour = 2; const outletColourDisplay = 3; const inletEnum = 0; const inletDone = 1; const inletColour = 2;const nrPanels = 4;// left inlet : messages from enum outlet of cube~// right inlet : messages from done outlet of cube~////////////////////////////////////////////////////////////////////// ARGUMENTS / ERROR CHECKING////////////////////////////////////////////////////////////////////if (jsarguments.length >= 2)	inlets = 3; else	post("selectfilter.js: at least one argument required\n"); ////////////////////////////////////////////////////////////////////// GLOBALS//////////////////////////////////////////////////////////////////////var numItems = 0; var enableColour = 0; ////////////////////////////////////////////////////////////////////// FUNCTIONS////////////////////////////////////////////////////////////////////function append(){	// count nr of cubes found by cube~	//numItems++; }function clear(){	// reset nr of cubes	//numItems = 0;	// remove selection	outlet(outletSelection, "set", -1); 		// turn display black	outlet(outletColourDisplay, "brgb", 20, 20, 20); 	// disable colour changing of display 	outlet(outletEnableDisplay, 0); 	enableColour = 0;}function find(a){	post("find done\n");	// executed at end of find/append/clear messages	if ((this.inlet == inletDone) && (a == "done"))	{		// output the select message only if the number passed as 		// arguments upon object creation is within the range of 		// 0..numItems		if ((jsarguments.length >= 2) && 			(jsarguments[1] >= 1) && (jsarguments[1] <= nrPanels))				outlet(outletSelection, "set", jsarguments[1] - 1); 	}}function set(a){	// catches set done message 	if ((this.inlet == inletDone) && (a == "done"))	{		// enable display again		outlet(outletEnableDisplay, 1); 		enableColour = 1;		// ask cube to send its colour		outlet(outletGetColour, "bang"); 	}}function brgb(r, g, b){	if (enableColour)		outlet(outletColourDisplay, "brgb", r, g, b); }function msg_int(a){}